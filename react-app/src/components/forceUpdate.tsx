import React, { useState, useCallback } from 'react';

function useForceUpdate() {
    const [, setTick] = useState(0);
    const update = useCallback(() => {
        setTick(tick => tick + 1);
    }, []);
    return update;
}

/*–í –ø—Ä–∏–º–µ—Ä–µ —Å useForceUpdate —è –æ–±–µ—Ä–Ω—É–ª —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ useCallback –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏,
 —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –∫–∞–∂–¥—ã–π —Ä–µ—Ä–µ–Ω–¥–µ—Ä.*/

export default function ForceUpdateComponent() {
    const forceUpdate = useForceUpdate();
    const [count, setCount] = useState(0);

    console.log('üîÑ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è');

    return (
        <div style={{ padding: 20 }}>
            <h2>Force Update –ü—Ä–∏–º–µ—Ä</h2>

            <p>–°—á—ë—Ç—á–∏–∫: {count}</p>
            <button onClick={() => setCount(prev => prev + 1)}>
                –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á—ë—Ç—á–∏–∫
            </button>

            <p style={{ marginTop: '1rem' }}>–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è:</p>
            <button onClick={forceUpdate}>
                Force Update (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ—Ä–µ–Ω–¥–µ—Ä)
            </button>
        </div>
    );
}
